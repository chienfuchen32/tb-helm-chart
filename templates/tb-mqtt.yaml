apiVersion: v1
kind: ConfigMap
metadata:
  name: tb-mqtt-transport-config
  namespace: {{.Values.namespace}}
  labels:
    name: tb-mqtt-transport-config
data:
  conf: |
    export JAVA_OPTS="$JAVA_OPTS -Xlog:gc*,heap*,age*,safepoint=debug:file=/var/log/tb-mqtt-transport/${TB_SERVICE_ID}-gc.log:time,uptime,level,tags:filecount=10,filesize=10M"
    export JAVA_OPTS="$JAVA_OPTS -XX:+IgnoreUnrecognizedVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/tb-mqtt-transport/${TB_SERVICE_ID}-heapdump.bin"
    export JAVA_OPTS="$JAVA_OPTS -XX:-UseBiasedLocking -XX:+UseTLAB -XX:+ResizeTLAB -XX:+PerfDisableSharedMem -XX:+UseCondCardMark"
    export JAVA_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:MaxTenuringThreshold=10"
    export JAVA_OPTS="$JAVA_OPTS -XX:+ExitOnOutOfMemoryError"
    export LOG_FILENAME=tb-mqtt-transport.out
    export LOADER_PATH=/usr/share/tb-mqtt-transport/conf
    export JAVA_OPTS="$JAVA_OPTS -Xmx8g -Xms8g"
    export JAVA_OPTS="$JAVA_OPTS -XX:ActiveProcessorCount=3"
    export JAVA_OPTS="$JAVA_OPTS -XX:ParallelGCThreads=2"
  logback: |
    <!DOCTYPE configuration>
    <configuration scan="true" scanPeriod="10 seconds">

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <logger name="org.thingsboard.server" level="INFO" />

        <root level="INFO">
            <appender-ref ref="STDOUT"/>
        </root>

    </configuration>

---
apiVersion: apps/v1
kind: {{.Values.mqtt.kind}}
metadata:
  name: tb-mqtt-transport
  namespace: {{.Values.namespace}}
spec:
  serviceName: "tb-mqtt-transport"
  podManagementPolicy: Parallel
  replicas: {{.Values.mqtt.replicas}}
  selector:
    matchLabels:
      app: tb-mqtt-transport
  template:
    metadata:
      labels:
        app: tb-mqtt-transport
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - tb-mqtt-transport
                topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: tb-mqtt-transport-config
          configMap:
            name: tb-mqtt-transport-config
            items:
              - key: conf
                path: tb-mqtt-transport.conf
              - key: logback
                path: logback.xml
      containers:
        - name: tb-mqtt
          imagePullPolicy: IfNotPresent
          image: {{.Values.mqtt.image}}
          ports:
            - containerPort: {{.Values.mqtt.config.MQTT_BIND_PORT}}
              name: mqtt
          resources:
            {{- toYaml .Values.mqtt.resources | nindent 12 }}
          env:
            - name: TB_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MQTT_BIND_PORT
              value: "{{.Values.mqtt.config.MQTT_BIND_PORT}}"
            - name: MQTT_TIMEOUT
              value: "{{.Values.mqtt.config.MQTT_TIMEOUT}}"
            - name: METRICS_ENABLED
              value: "true"
            - name: METRICS_ENDPOINTS_EXPOSE
              value: prometheus
            - name: WEB_APPLICATION_ENABLE
              value: "true"
            - name: WEB_APPLICATION_TYPE
              value: servlet
            - name: HTTP_BIND_PORT
              value: "8081"
          envFrom:
            - configMapRef:
                name: tb-public-config
            - configMapRef:
                name: tb-redis-config
          volumeMounts:
            - mountPath: /config
              name: tb-mqtt-transport-config
          readinessProbe:
            periodSeconds: 20
            tcpSocket:
              port: {{.Values.mqtt.config.MQTT_BIND_PORT}}
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 20
            tcpSocket:
              port: {{.Values.mqtt.config.MQTT_BIND_PORT}}
      nodeSelector:
        {{.Values.mqtt.nodeSelector}}
---
apiVersion: v1
kind: Service
metadata:
  name: tb-mqtt-loadbalancer
  namespace: {{.Values.namespace}}
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
  labels:
    app: tb-mqtt-transport
spec:
  type: LoadBalancer
  loadBalancerIP: {{.Values.mqtt.loadBalancerIP}}
  externalTrafficPolicy: Local
  selector:
    app: tb-mqtt-transport
  ports:
    - port: {{.Values.mqtt.config.MQTT_BIND_PORT}}
      targetPort: {{.Values.mqtt.config.MQTT_BIND_PORT}}
      name: mqtt
---
apiVersion: v1
kind: Service
metadata:
  name: tb-mqtt-metrics
  namespace: {{.Values.namespace}}
  labels:
    app: tb-mqtt-metrics
spec:
  type: ClusterIP
  selector:
    app: tb-mqtt-transport
  ports:
    - port: 8081
      targetPort: 8081
      name: metrics
